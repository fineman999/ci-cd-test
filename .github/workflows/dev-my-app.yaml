name: dev my app

on:
  push:
    branches:
      - develop

concurrency:
  group: dev-my-app
  cancel-in-progress: true

env:
  PHASE: dev
  APP_NAME: my-app
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_CODE_DEPLOY_NAME: ${{ secrets.AWS_CODE_DEPLOY_NAME }}
  AWS_CODE_DEPLOY_GROUP: ${{ secrets.AWS_CODE_DEPLOY_GROUP }}


# github action oidc
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 2. Checkout Code
        uses: actions/checkout@v4

      - name: 3. Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: samplerolesession

      - name: 4. Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      - name: 5. Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}" > image.txt
          docker build -f Dockerfile.dev -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: 6. Create a ZIP file for the AWS CodeDeploy
        run: |
          mkdir ${{env.AWS_CODE_DEPLOY_NAME}} && cp -r appspec.yml image.txt ${{ env.AWS_CODE_DEPLOY_NAME }}

      - name: 7. Upload the ZIP file to the S3 bucket(CodeDeploy uses this file)
        run: |
          cat image.txt
          aws deploy push \
          --application-name ${{env.AWS_CODE_DEPLOY_NAME}} \
          --s3-location s3://${{env.AWS_S3_BUCKET_NAME}}/codedeploy/$GITHUB_SHA.zip \
          --ignore-hidden-files \
          --source ${{env.AWS_CODE_DEPLOY_NAME}}

      - name: 8. AWS EC2 CodeDeploy
        run: |
          echo "Deploying the application"
          aws deploy create-deployment --application-name ${{env.AWS_CODE_DEPLOY_NAME}} \
          --deployment-config-name CodeDeployDefault.OneAtTime \
          --deployment-group-name ${{env.AWS_CODE_DEPLOY_GROUP}} \ 
          --s3-location bucket=$AWS_S3_BUCKET_NAME,bundleType=zip,key=codedeploy/$GITHUB_SHA.zip